version: '3.7'
name: squer-cc-workshop
volumes:
  redpanda: null
networks:
  redpanda_network:
    driver: bridge
services:
  postgres:
    networks:
      - redpanda_network
    image: debezium/postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -U postgresuser -d squerdb" #TODO: UPDATE
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=squerdb #TODO: UPDATE
      - PGPASSWORD=postgrespw
    volumes:
      - ./data:/docker-entrypoint-initdb.d
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.10
    networks:
      - redpanda_network
    container_name: redpanda
    command:
      - redpanda start
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.4.5
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: squer-connect
              url: http://debezium:8083
    ports:
      - "8080:8080"
    depends_on:
      - redpanda
  debezium:
    # Docs: https://hub.docker.com/r/debezium/connect
    image: debezium/connect:2.5.4.Final
    networks:
      - redpanda_network
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: redpanda:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      INTERNAL_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      INTERNAL_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://redpanda:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://redpanda:8081'
      #CONNECT_PLUGIN_PATH: "/var/lib/connect/plugins" -- If this path is set, the plugins already packaged with the
      # Debezium container are no longer found
    volumes:
      - ./connect/plugins/confluentinc-kafka-connect-avro-converter-7.6.0:/kafka/connect/confluentinc-kafka-connect-avro-converter-7.6.0
    depends_on: [postgres, redpanda]
    ports:
      - "8083:8083"