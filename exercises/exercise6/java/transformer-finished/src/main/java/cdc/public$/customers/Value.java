/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cdc.public$.customers;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4553876429686125689L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"cdc.public.customers\",\"fields\":[{\"name\":\"customer_id\",\"type\":{\"type\":\"string\",\"connect.version\":1,\"connect.name\":\"io.debezium.data.Uuid\"}},{\"name\":\"ssn\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"user_name\",\"type\":\"string\"},{\"name\":\"full_name\",\"type\":\"string\"},{\"name\":\"delivery_address\",\"type\":\"string\"},{\"name\":\"delivery_zipcode\",\"type\":\"string\"},{\"name\":\"delivery_city\",\"type\":\"string\"},{\"name\":\"billing_address\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"billing_zipcode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"billing_city\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ts\",\"type\":{\"type\":\"long\",\"connect.version\":1,\"connect.default\":0,\"connect.name\":\"io.debezium.time.MicroTimestamp\"},\"default\":0}],\"connect.name\":\"cdc.public.customers.Value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Value> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Value to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Value from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Value instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence customer_id;
  private java.lang.CharSequence ssn;
  private java.lang.CharSequence email;
  private java.lang.CharSequence user_name;
  private java.lang.CharSequence full_name;
  private java.lang.CharSequence delivery_address;
  private java.lang.CharSequence delivery_zipcode;
  private java.lang.CharSequence delivery_city;
  private java.lang.CharSequence billing_address;
  private java.lang.CharSequence billing_zipcode;
  private java.lang.CharSequence billing_city;
  private long ts;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param customer_id The new value for customer_id
   * @param ssn The new value for ssn
   * @param email The new value for email
   * @param user_name The new value for user_name
   * @param full_name The new value for full_name
   * @param delivery_address The new value for delivery_address
   * @param delivery_zipcode The new value for delivery_zipcode
   * @param delivery_city The new value for delivery_city
   * @param billing_address The new value for billing_address
   * @param billing_zipcode The new value for billing_zipcode
   * @param billing_city The new value for billing_city
   * @param ts The new value for ts
   */
  public Value(java.lang.CharSequence customer_id, java.lang.CharSequence ssn, java.lang.CharSequence email, java.lang.CharSequence user_name, java.lang.CharSequence full_name, java.lang.CharSequence delivery_address, java.lang.CharSequence delivery_zipcode, java.lang.CharSequence delivery_city, java.lang.CharSequence billing_address, java.lang.CharSequence billing_zipcode, java.lang.CharSequence billing_city, java.lang.Long ts) {
    this.customer_id = customer_id;
    this.ssn = ssn;
    this.email = email;
    this.user_name = user_name;
    this.full_name = full_name;
    this.delivery_address = delivery_address;
    this.delivery_zipcode = delivery_zipcode;
    this.delivery_city = delivery_city;
    this.billing_address = billing_address;
    this.billing_zipcode = billing_zipcode;
    this.billing_city = billing_city;
    this.ts = ts;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customer_id;
    case 1: return ssn;
    case 2: return email;
    case 3: return user_name;
    case 4: return full_name;
    case 5: return delivery_address;
    case 6: return delivery_zipcode;
    case 7: return delivery_city;
    case 8: return billing_address;
    case 9: return billing_zipcode;
    case 10: return billing_city;
    case 11: return ts;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customer_id = (java.lang.CharSequence)value$; break;
    case 1: ssn = (java.lang.CharSequence)value$; break;
    case 2: email = (java.lang.CharSequence)value$; break;
    case 3: user_name = (java.lang.CharSequence)value$; break;
    case 4: full_name = (java.lang.CharSequence)value$; break;
    case 5: delivery_address = (java.lang.CharSequence)value$; break;
    case 6: delivery_zipcode = (java.lang.CharSequence)value$; break;
    case 7: delivery_city = (java.lang.CharSequence)value$; break;
    case 8: billing_address = (java.lang.CharSequence)value$; break;
    case 9: billing_zipcode = (java.lang.CharSequence)value$; break;
    case 10: billing_city = (java.lang.CharSequence)value$; break;
    case 11: ts = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'customer_id' field.
   * @return The value of the 'customer_id' field.
   */
  public java.lang.CharSequence getCustomerId() {
    return customer_id;
  }


  /**
   * Sets the value of the 'customer_id' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.CharSequence value) {
    this.customer_id = value;
  }

  /**
   * Gets the value of the 'ssn' field.
   * @return The value of the 'ssn' field.
   */
  public java.lang.CharSequence getSsn() {
    return ssn;
  }


  /**
   * Sets the value of the 'ssn' field.
   * @param value the value to set.
   */
  public void setSsn(java.lang.CharSequence value) {
    this.ssn = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'user_name' field.
   * @return The value of the 'user_name' field.
   */
  public java.lang.CharSequence getUserName() {
    return user_name;
  }


  /**
   * Sets the value of the 'user_name' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.CharSequence value) {
    this.user_name = value;
  }

  /**
   * Gets the value of the 'full_name' field.
   * @return The value of the 'full_name' field.
   */
  public java.lang.CharSequence getFullName() {
    return full_name;
  }


  /**
   * Sets the value of the 'full_name' field.
   * @param value the value to set.
   */
  public void setFullName(java.lang.CharSequence value) {
    this.full_name = value;
  }

  /**
   * Gets the value of the 'delivery_address' field.
   * @return The value of the 'delivery_address' field.
   */
  public java.lang.CharSequence getDeliveryAddress() {
    return delivery_address;
  }


  /**
   * Sets the value of the 'delivery_address' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(java.lang.CharSequence value) {
    this.delivery_address = value;
  }

  /**
   * Gets the value of the 'delivery_zipcode' field.
   * @return The value of the 'delivery_zipcode' field.
   */
  public java.lang.CharSequence getDeliveryZipcode() {
    return delivery_zipcode;
  }


  /**
   * Sets the value of the 'delivery_zipcode' field.
   * @param value the value to set.
   */
  public void setDeliveryZipcode(java.lang.CharSequence value) {
    this.delivery_zipcode = value;
  }

  /**
   * Gets the value of the 'delivery_city' field.
   * @return The value of the 'delivery_city' field.
   */
  public java.lang.CharSequence getDeliveryCity() {
    return delivery_city;
  }


  /**
   * Sets the value of the 'delivery_city' field.
   * @param value the value to set.
   */
  public void setDeliveryCity(java.lang.CharSequence value) {
    this.delivery_city = value;
  }

  /**
   * Gets the value of the 'billing_address' field.
   * @return The value of the 'billing_address' field.
   */
  public java.lang.CharSequence getBillingAddress() {
    return billing_address;
  }


  /**
   * Sets the value of the 'billing_address' field.
   * @param value the value to set.
   */
  public void setBillingAddress(java.lang.CharSequence value) {
    this.billing_address = value;
  }

  /**
   * Gets the value of the 'billing_zipcode' field.
   * @return The value of the 'billing_zipcode' field.
   */
  public java.lang.CharSequence getBillingZipcode() {
    return billing_zipcode;
  }


  /**
   * Sets the value of the 'billing_zipcode' field.
   * @param value the value to set.
   */
  public void setBillingZipcode(java.lang.CharSequence value) {
    this.billing_zipcode = value;
  }

  /**
   * Gets the value of the 'billing_city' field.
   * @return The value of the 'billing_city' field.
   */
  public java.lang.CharSequence getBillingCity() {
    return billing_city;
  }


  /**
   * Sets the value of the 'billing_city' field.
   * @param value the value to set.
   */
  public void setBillingCity(java.lang.CharSequence value) {
    this.billing_city = value;
  }

  /**
   * Gets the value of the 'ts' field.
   * @return The value of the 'ts' field.
   */
  public long getTs() {
    return ts;
  }


  /**
   * Sets the value of the 'ts' field.
   * @param value the value to set.
   */
  public void setTs(long value) {
    this.ts = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static cdc.public$.customers.Value.Builder newBuilder() {
    return new cdc.public$.customers.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static cdc.public$.customers.Value.Builder newBuilder(cdc.public$.customers.Value.Builder other) {
    if (other == null) {
      return new cdc.public$.customers.Value.Builder();
    } else {
      return new cdc.public$.customers.Value.Builder(other);
    }
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static cdc.public$.customers.Value.Builder newBuilder(cdc.public$.customers.Value other) {
    if (other == null) {
      return new cdc.public$.customers.Value.Builder();
    } else {
      return new cdc.public$.customers.Value.Builder(other);
    }
  }

  /**
   * RecordBuilder for Value instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private java.lang.CharSequence customer_id;
    private java.lang.CharSequence ssn;
    private java.lang.CharSequence email;
    private java.lang.CharSequence user_name;
    private java.lang.CharSequence full_name;
    private java.lang.CharSequence delivery_address;
    private java.lang.CharSequence delivery_zipcode;
    private java.lang.CharSequence delivery_city;
    private java.lang.CharSequence billing_address;
    private java.lang.CharSequence billing_zipcode;
    private java.lang.CharSequence billing_city;
    private long ts;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(cdc.public$.customers.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customer_id)) {
        this.customer_id = data().deepCopy(fields()[0].schema(), other.customer_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ssn)) {
        this.ssn = data().deepCopy(fields()[1].schema(), other.ssn);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.user_name)) {
        this.user_name = data().deepCopy(fields()[3].schema(), other.user_name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.full_name)) {
        this.full_name = data().deepCopy(fields()[4].schema(), other.full_name);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.delivery_address)) {
        this.delivery_address = data().deepCopy(fields()[5].schema(), other.delivery_address);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.delivery_zipcode)) {
        this.delivery_zipcode = data().deepCopy(fields()[6].schema(), other.delivery_zipcode);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.delivery_city)) {
        this.delivery_city = data().deepCopy(fields()[7].schema(), other.delivery_city);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.billing_address)) {
        this.billing_address = data().deepCopy(fields()[8].schema(), other.billing_address);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.billing_zipcode)) {
        this.billing_zipcode = data().deepCopy(fields()[9].schema(), other.billing_zipcode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.billing_city)) {
        this.billing_city = data().deepCopy(fields()[10].schema(), other.billing_city);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.ts)) {
        this.ts = data().deepCopy(fields()[11].schema(), other.ts);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(cdc.public$.customers.Value other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.customer_id)) {
        this.customer_id = data().deepCopy(fields()[0].schema(), other.customer_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ssn)) {
        this.ssn = data().deepCopy(fields()[1].schema(), other.ssn);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.user_name)) {
        this.user_name = data().deepCopy(fields()[3].schema(), other.user_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.full_name)) {
        this.full_name = data().deepCopy(fields()[4].schema(), other.full_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.delivery_address)) {
        this.delivery_address = data().deepCopy(fields()[5].schema(), other.delivery_address);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.delivery_zipcode)) {
        this.delivery_zipcode = data().deepCopy(fields()[6].schema(), other.delivery_zipcode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.delivery_city)) {
        this.delivery_city = data().deepCopy(fields()[7].schema(), other.delivery_city);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.billing_address)) {
        this.billing_address = data().deepCopy(fields()[8].schema(), other.billing_address);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.billing_zipcode)) {
        this.billing_zipcode = data().deepCopy(fields()[9].schema(), other.billing_zipcode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.billing_city)) {
        this.billing_city = data().deepCopy(fields()[10].schema(), other.billing_city);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ts)) {
        this.ts = data().deepCopy(fields()[11].schema(), other.ts);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'customer_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerId() {
      return customer_id;
    }


    /**
      * Sets the value of the 'customer_id' field.
      * @param value The value of 'customer_id'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setCustomerId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.customer_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_id' field has been set.
      * @return True if the 'customer_id' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'customer_id' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearCustomerId() {
      customer_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ssn' field.
      * @return The value.
      */
    public java.lang.CharSequence getSsn() {
      return ssn;
    }


    /**
      * Sets the value of the 'ssn' field.
      * @param value The value of 'ssn'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setSsn(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.ssn = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ssn' field has been set.
      * @return True if the 'ssn' field has been set, false otherwise.
      */
    public boolean hasSsn() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ssn' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearSsn() {
      ssn = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.email = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearEmail() {
      email = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserName() {
      return user_name;
    }


    /**
      * Sets the value of the 'user_name' field.
      * @param value The value of 'user_name'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setUserName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.user_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'user_name' field has been set.
      * @return True if the 'user_name' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'user_name' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearUserName() {
      user_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'full_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getFullName() {
      return full_name;
    }


    /**
      * Sets the value of the 'full_name' field.
      * @param value The value of 'full_name'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setFullName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.full_name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'full_name' field has been set.
      * @return True if the 'full_name' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'full_name' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearFullName() {
      full_name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_address' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryAddress() {
      return delivery_address;
    }


    /**
      * Sets the value of the 'delivery_address' field.
      * @param value The value of 'delivery_address'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setDeliveryAddress(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.delivery_address = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_address' field has been set.
      * @return True if the 'delivery_address' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'delivery_address' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearDeliveryAddress() {
      delivery_address = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_zipcode' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryZipcode() {
      return delivery_zipcode;
    }


    /**
      * Sets the value of the 'delivery_zipcode' field.
      * @param value The value of 'delivery_zipcode'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setDeliveryZipcode(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.delivery_zipcode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_zipcode' field has been set.
      * @return True if the 'delivery_zipcode' field has been set, false otherwise.
      */
    public boolean hasDeliveryZipcode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'delivery_zipcode' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearDeliveryZipcode() {
      delivery_zipcode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_city' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryCity() {
      return delivery_city;
    }


    /**
      * Sets the value of the 'delivery_city' field.
      * @param value The value of 'delivery_city'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setDeliveryCity(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.delivery_city = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_city' field has been set.
      * @return True if the 'delivery_city' field has been set, false otherwise.
      */
    public boolean hasDeliveryCity() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'delivery_city' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearDeliveryCity() {
      delivery_city = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'billing_address' field.
      * @return The value.
      */
    public java.lang.CharSequence getBillingAddress() {
      return billing_address;
    }


    /**
      * Sets the value of the 'billing_address' field.
      * @param value The value of 'billing_address'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setBillingAddress(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.billing_address = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'billing_address' field has been set.
      * @return True if the 'billing_address' field has been set, false otherwise.
      */
    public boolean hasBillingAddress() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'billing_address' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearBillingAddress() {
      billing_address = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'billing_zipcode' field.
      * @return The value.
      */
    public java.lang.CharSequence getBillingZipcode() {
      return billing_zipcode;
    }


    /**
      * Sets the value of the 'billing_zipcode' field.
      * @param value The value of 'billing_zipcode'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setBillingZipcode(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.billing_zipcode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'billing_zipcode' field has been set.
      * @return True if the 'billing_zipcode' field has been set, false otherwise.
      */
    public boolean hasBillingZipcode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'billing_zipcode' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearBillingZipcode() {
      billing_zipcode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'billing_city' field.
      * @return The value.
      */
    public java.lang.CharSequence getBillingCity() {
      return billing_city;
    }


    /**
      * Sets the value of the 'billing_city' field.
      * @param value The value of 'billing_city'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setBillingCity(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.billing_city = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'billing_city' field has been set.
      * @return True if the 'billing_city' field has been set, false otherwise.
      */
    public boolean hasBillingCity() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'billing_city' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearBillingCity() {
      billing_city = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ts' field.
      * @return The value.
      */
    public long getTs() {
      return ts;
    }


    /**
      * Sets the value of the 'ts' field.
      * @param value The value of 'ts'.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder setTs(long value) {
      validate(fields()[11], value);
      this.ts = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ts' field has been set.
      * @return True if the 'ts' field has been set, false otherwise.
      */
    public boolean hasTs() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ts' field.
      * @return This builder.
      */
    public cdc.public$.customers.Value.Builder clearTs() {
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        record.customer_id = fieldSetFlags()[0] ? this.customer_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.ssn = fieldSetFlags()[1] ? this.ssn : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.email = fieldSetFlags()[2] ? this.email : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.user_name = fieldSetFlags()[3] ? this.user_name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.full_name = fieldSetFlags()[4] ? this.full_name : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.delivery_address = fieldSetFlags()[5] ? this.delivery_address : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.delivery_zipcode = fieldSetFlags()[6] ? this.delivery_zipcode : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.delivery_city = fieldSetFlags()[7] ? this.delivery_city : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.billing_address = fieldSetFlags()[8] ? this.billing_address : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.billing_zipcode = fieldSetFlags()[9] ? this.billing_zipcode : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.billing_city = fieldSetFlags()[10] ? this.billing_city : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.ts = fieldSetFlags()[11] ? this.ts : (java.lang.Long) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.customer_id);

    out.writeString(this.ssn);

    out.writeString(this.email);

    out.writeString(this.user_name);

    out.writeString(this.full_name);

    out.writeString(this.delivery_address);

    out.writeString(this.delivery_zipcode);

    out.writeString(this.delivery_city);

    if (this.billing_address == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.billing_address);
    }

    if (this.billing_zipcode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.billing_zipcode);
    }

    if (this.billing_city == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.billing_city);
    }

    out.writeLong(this.ts);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.customer_id = in.readString(this.customer_id instanceof Utf8 ? (Utf8)this.customer_id : null);

      this.ssn = in.readString(this.ssn instanceof Utf8 ? (Utf8)this.ssn : null);

      this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);

      this.user_name = in.readString(this.user_name instanceof Utf8 ? (Utf8)this.user_name : null);

      this.full_name = in.readString(this.full_name instanceof Utf8 ? (Utf8)this.full_name : null);

      this.delivery_address = in.readString(this.delivery_address instanceof Utf8 ? (Utf8)this.delivery_address : null);

      this.delivery_zipcode = in.readString(this.delivery_zipcode instanceof Utf8 ? (Utf8)this.delivery_zipcode : null);

      this.delivery_city = in.readString(this.delivery_city instanceof Utf8 ? (Utf8)this.delivery_city : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.billing_address = null;
      } else {
        this.billing_address = in.readString(this.billing_address instanceof Utf8 ? (Utf8)this.billing_address : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.billing_zipcode = null;
      } else {
        this.billing_zipcode = in.readString(this.billing_zipcode instanceof Utf8 ? (Utf8)this.billing_zipcode : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.billing_city = null;
      } else {
        this.billing_city = in.readString(this.billing_city instanceof Utf8 ? (Utf8)this.billing_city : null);
      }

      this.ts = in.readLong();

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.customer_id = in.readString(this.customer_id instanceof Utf8 ? (Utf8)this.customer_id : null);
          break;

        case 1:
          this.ssn = in.readString(this.ssn instanceof Utf8 ? (Utf8)this.ssn : null);
          break;

        case 2:
          this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          break;

        case 3:
          this.user_name = in.readString(this.user_name instanceof Utf8 ? (Utf8)this.user_name : null);
          break;

        case 4:
          this.full_name = in.readString(this.full_name instanceof Utf8 ? (Utf8)this.full_name : null);
          break;

        case 5:
          this.delivery_address = in.readString(this.delivery_address instanceof Utf8 ? (Utf8)this.delivery_address : null);
          break;

        case 6:
          this.delivery_zipcode = in.readString(this.delivery_zipcode instanceof Utf8 ? (Utf8)this.delivery_zipcode : null);
          break;

        case 7:
          this.delivery_city = in.readString(this.delivery_city instanceof Utf8 ? (Utf8)this.delivery_city : null);
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.billing_address = null;
          } else {
            this.billing_address = in.readString(this.billing_address instanceof Utf8 ? (Utf8)this.billing_address : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.billing_zipcode = null;
          } else {
            this.billing_zipcode = in.readString(this.billing_zipcode instanceof Utf8 ? (Utf8)this.billing_zipcode : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.billing_city = null;
          } else {
            this.billing_city = in.readString(this.billing_city instanceof Utf8 ? (Utf8)this.billing_city : null);
          }
          break;

        case 11:
          this.ts = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










